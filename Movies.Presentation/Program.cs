using Microsoft.EntityFrameworkCore;
using Movies.Application;
using Movies.Infrastructure;
using Movies.Domain;
using Movies.Presentation.Modules;
using Movies.Presentation.Handlers;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Http;

var builder = WebApplication.CreateBuilder(args);

// ðŸ”¹ Ajouter les services de lâ€™application
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();
builder.Services.AddMediatR(cfg => cfg.RegisterServicesFromAssemblyContaining<Program>());

// ðŸ”¹ Configuration de la base de donnÃ©es SQL Server
builder.Services.AddDbContext<MoviesDbContext>(options =>
{
    options.UseSqlServer(builder.Configuration.GetConnectionString("DefaultConnection"));
});

builder.Services.AddCors(options =>
{
    options.AddPolicy("CorsPolicy", policyBuilder =>
    {
        policyBuilder.AllowAnyHeader()
                     .AllowAnyMethod()
                     .WithOrigins("http://localhost:5175"); // Retirer l'espace supplÃ©mentaire
    });
});

// ðŸ”¹ Ajouter les services de lâ€™application et de lâ€™infrastructure
builder.Services.AddApplication();
builder.Services.AddExceptionHandler<ExceptionHandler>();

var app = builder.Build();

// ðŸ”¹ Activer Swagger uniquement en mode dÃ©veloppement
if (app.Environment.IsDevelopment())
{
    app.UseSwagger();
    app.UseSwaggerUI();
}

// ðŸ”¹ Appliquer la politique CORS
app.UseCors("CorsPolicy");  // Applique la politique CORS ici

app.UseExceptionHandler(_ => { });
app.UseHttpsRedirection();

// ðŸ”¹ Ajout des endpoints des films
app.AddMoviesEndpoints();

// ðŸ”¹ DÃ©marrer lâ€™application
app.Run();
